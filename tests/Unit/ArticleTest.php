<?php

use App\Article;
use Illuminate\Foundation\Testing\DatabaseMigrations;

class ArticleTest extends TestCase
{
    use DatabaseMigrations;

    public function testAnArticleCanBeCreated()
    {
        $user = factory(App\User::class)->create();
        $big_text = <<<END
Таким образом сложившаяся структура организации способствует подготовки и реализации соответствующий условий активизации. Таким образом постоянное информационно-пропагандистское обеспечение нашей деятельности играет важную роль в формировании направлений прогрессивного развития. Значимость этих проблем настолько очевидна, что сложившаяся структура организации играет важную роль в формировании соответствующий условий активизации. Повседневная практика показывает, что сложившаяся структура организации влечет за собой процесс внедрения и модернизации системы обучения кадров, соответствует насущным потребностям. Разнообразный и богатый опыт реализация намеченных плановых заданий обеспечивает широкому кругу (специалистов) участие в формировании систем массового участия. Значимость этих проблем настолько очевидна, что укрепление и развитие структуры обеспечивает широкому кругу (специалистов) участие в формировании форм развития.

    Равным образом консультация с широким активом требуют от нас анализа существенных финансовых и административных условий. Не следует, однако забывать, что постоянный количественный рост и сфера нашей активности в значительной степени обуславливает создание новых предложений. Равным образом новая модель организационной деятельности в значительной степени обуславливает создание соответствующий условий активизации. Таким образом постоянное информационно-пропагандистское обеспечение нашей деятельности позволяет выполнять важные задания по разработке модели развития.
END;
        $article = $user->articles()->create(['topic' => 'Test topic', 'text' => $big_text]);
        $latest_article = Article::latest()->first();
        $this->assertEquals($article->id, $latest_article->id);
        $this->assertEquals('Test topic', $latest_article->topic);
        $this->seeInDatabase('articles', ['id' => 1, 'topic' => 'Test topic', 'text' => $big_text]);
    }

    public function testArticleCanBeDeleted()
    {
        $user = factory(App\User::class)->create();
    }
}
